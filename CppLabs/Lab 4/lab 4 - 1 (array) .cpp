/* ВАРИАНТ 2.
Описать структуру с именем aeroflot, содержащую следующие поля:
• название пункта назначения рейса;
• номер рейса (число);
• тип самолета.
Написать программу, выполняющую следующие действия:
• ввод с клавиатуры данных в массив, состоящий из максимум 7 элементов типа aeroflot,
причем сделать возможность прервать ввод, чтобы можно было не вводить все 7 элементов;
после окончания ввода отсортировать элементы массива по возрастанию номера рейса;
• вывод в консоль номеров рейсов и типов самолетов, вылетающих в пункт назначения,
название которого совпало с названием, введенным с клавиатуры;
• если таких рейсов нет, вывести соответствующее сообщение;
• реализовать вторую версию программы, вместо массива использовать двусвязный список;
элементы добавлять таким образом, чтобы сохранялась упорядоченность списка по номеру рейса
(вставка нового элемента после элемента, который меньше нового элемента и перед большим элементом). */

/*С УЧЕТОМ ИСПРАВЛЕНИЙ
* -2 char *name = new char[50];
* -1 нет проверки ввода
* -2 (*mas[i].name == *name2)
*/


#include <iostream>
#include <cstring>
using namespace std;

struct aeroflot
{
	char *name; //char *name = new char[50]; это неправильно, так как выделяется неоптимальное количество памяти
	short number;
	char *type; //char *type = new char[20]; аналогично
};

char *readString() //вводим функцию, которая считывает сроку и выделяет определенное количество памяти под массив
{
	char buff[255];
	cin.getline(buff, 255);
	char *str = new char[strlen(buff)];
	strcpy(str, buff);
	return str;
}

int main()
{
	setlocale(0, "");
	aeroflot *mas = new aeroflot[7];
	int n = 0;
	for (n = 0; n < 7; n++)
	{
		cout << "ВНИМАНИЕ!" << endl << "Для завершения ввода не забудьте поставить точку!" << endl;
		cout << "Введите название пункта назначения: ";
		mas[n].name = readString(); //вызываем функцию считывания

		if (mas[n].name[0] == '.') break;

		//начало проверки ввода для номера рейса
		while (1) //бесконечный цикл, пока пользователь не введет число
		{
			cout << "Введите номер рейса: ";
			char *buff = new char[20];
			cin >> buff;

			bool q = true;
			for (int i = 0; i < strlen(buff); i++)
				if (buff[i] < '0' || buff[i] > '9')
				{
					q = false;
					break;
				}

			if (!q)
				cout << "Ошибка! Введите число! " << endl;
			else
			{
				mas[n].number = atoi(buff);
				delete[] buff;
				break;
			}
		}
		//окончание проверки ввода 
		cin.get(); //пропускает символ конца строки
		cout << "Введите тип самолета: ";
		mas[n].type = readString(); //вызываем функцию считывания
		
	}
	cout << endl << "Введите название пункта назначения: ";
	char *name2 = new char[50];
	cin >> name2;
	bool c = 0;
	for (int i = 0; i < n; i++)
	{
		if (!strcmp(name2, mas[i].name)) //сравниваем две строки. если строки равны, то происходит вывод
						//(*mas[i].name == *name2) - программа сравнивала только первые символы
		{
			c = 1;
			cout << mas[i].name << " " << mas[i].number << " " << mas[i].type << endl;
		}
	}
	if (!c)
		cout << "Таких рейсов нет";
	delete[] name2;
	system("pause");
	return 0;
}
